{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../microsoft-teams-library-js/dist/MicrosoftTeams.min.js","webpack:///./src/utils.ts","webpack:///./src/app.ts","webpack:///./src/index.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAK+B;AACrC,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iCAAiC;AAClF,wHAAwH,mBAAmB,EAAE;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2CAA2C;AAC3F,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,4BAA4B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qBAAqB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,eAAe;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzuDAAuD;;;AAGxD,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,+DAA+D;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;;;AAG/C,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,6BAA6B;AACjoDAAoD,6BAA6B;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;;;AAGvE,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAcoDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,gCAAgC,sDAAsD,EAAE,OAAO,EAAE;AAC/L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,gCAAgC,sDAAsD,EAAE,OAAO,EAAE;AAC/L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;;;AAG1E,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;;;AAG/C,OAAO;AACP;AACA,CAAC;AACD,8C;;;;;;;;;;ACnrDO;AACA;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACvLoC;AACkB;AAC/C;AACP;AACA;AACA;AACA,IAAI,SAAS;AACb;AACA;AACA;AACA,8BAA8B,gCAAyB;AACvD;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,gCAAyB;AACrC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,yCAAkC;AAC9C;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,kDAA2C;AACvD;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,gCAAyB;AACrC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,yCAAkC;AAC9C;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,kDAA2C;AACvD;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,mDAA4C;AACxD;AACA,aAAa;AACb;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,mCAA4B;AACxC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,qCAA8B;AAC1C;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,oCAA6B;AACzC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0BAA0B,2BAAoB;AAC9C;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+BAA+B,qCAA8B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,+BAA+B,qCAA8B;AAC7D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,sCAA+B;AAC3C;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oCAA6B;AACzC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,oCAA6B;AACzC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,oCAA6B;AACzC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,8BAAuB;AACnC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,8BAAuB;AACnC;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,8BAAuB;AACnC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,8BAAuB;AACnC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,8BAAuB;AACnC;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,qCAA8B;AAC1C;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,2BAAoB;AAChC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,2BAAoB;AAChC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,sCAA+B;AAC3C;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oCAA6B;AACzC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,oCAA6B;AACzC;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,kBAAc;AAC1B,YAAY,wCAAiC;AAC7C;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,YAAY,iDAA0C;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,sCAAsC,iCAAiC;AACvE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAwC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChf8E;AACjC;AAC7C;AACA,IAAI,oBAAoB;AACxB,8BAA8B,SAAS;AACvC;AACA,eAAe,YAAY;AAC3B,4CAA4C,SAAS;AACrD,oCAAoC,eAAe;AACnD,CAAC","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"microsoftTeams\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"microsoftTeams\"] = factory();\n\telse\n\t\troot[\"microsoftTeams\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GlobalVars = /** @class */ (function () {\r\n    function GlobalVars() {\r\n    }\r\n    GlobalVars.initializeCalled = false;\r\n    GlobalVars.isFramelessWindow = false;\r\n    GlobalVars.parentMessageQueue = [];\r\n    GlobalVars.childMessageQueue = [];\r\n    GlobalVars.nextMessageId = 0;\r\n    GlobalVars.handlers = {};\r\n    GlobalVars.callbacks = {};\r\n    GlobalVars.printCapabilityEnabled = false;\r\n    return GlobalVars;\r\n}());\r\nexports.GlobalVars = GlobalVars;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar publicAPIs_1 = __webpack_require__(4);\r\nvar constants_1 = __webpack_require__(2);\r\nvar globalVars_1 = __webpack_require__(0);\r\n// ::::::::::::::::::::MicrosoftTeams SDK Internal :::::::::::::::::\r\nglobalVars_1.GlobalVars.handlers[\"themeChange\"] = handleThemeChange;\r\nglobalVars_1.GlobalVars.handlers[\"fullScreenChange\"] = handleFullScreenChange;\r\nglobalVars_1.GlobalVars.handlers[\"backButtonPress\"] = handleBackButtonPress;\r\nglobalVars_1.GlobalVars.handlers[\"beforeUnload\"] = handleBeforeUnload;\r\nglobalVars_1.GlobalVars.handlers[\"changeSettings\"] = handleChangeSettings;\r\nglobalVars_1.GlobalVars.handlers[\"startConversation\"] = handleStartConversation;\r\nglobalVars_1.GlobalVars.handlers[\"closeConversation\"] = handleCloseConversation;\r\nfunction handleStartConversation(subEntityId, conversationId) {\r\n    if (globalVars_1.GlobalVars.onStartConversationHandler) {\r\n        globalVars_1.GlobalVars.onStartConversationHandler(subEntityId, conversationId);\r\n    }\r\n}\r\nfunction handleCloseConversation(subEntityId, conversationId) {\r\n    if (globalVars_1.GlobalVars.onCloseConversationHandler) {\r\n        globalVars_1.GlobalVars.onCloseConversationHandler(subEntityId, conversationId);\r\n    }\r\n}\r\nfunction handleThemeChange(theme) {\r\n    if (globalVars_1.GlobalVars.themeChangeHandler) {\r\n        globalVars_1.GlobalVars.themeChangeHandler(theme);\r\n    }\r\n    if (globalVars_1.GlobalVars.childWindow) {\r\n        sendMessageRequest(globalVars_1.GlobalVars.childWindow, \"themeChange\", [theme]);\r\n    }\r\n}\r\nfunction handleFullScreenChange(isFullScreen) {\r\n    if (globalVars_1.GlobalVars.fullScreenChangeHandler) {\r\n        globalVars_1.GlobalVars.fullScreenChangeHandler(isFullScreen);\r\n    }\r\n}\r\nfunction handleBackButtonPress() {\r\n    if (!globalVars_1.GlobalVars.backButtonPressHandler || !globalVars_1.GlobalVars.backButtonPressHandler()) {\r\n        publicAPIs_1.navigateBack();\r\n    }\r\n}\r\nfunction handleBeforeUnload() {\r\n    var readyToUnload = function () {\r\n        sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"readyToUnload\", []);\r\n    };\r\n    if (!globalVars_1.GlobalVars.beforeUnloadHandler || !globalVars_1.GlobalVars.beforeUnloadHandler(readyToUnload)) {\r\n        readyToUnload();\r\n    }\r\n}\r\nfunction handleChangeSettings() {\r\n    if (globalVars_1.GlobalVars.changeSettingsHandler) {\r\n        globalVars_1.GlobalVars.changeSettingsHandler();\r\n    }\r\n}\r\nfunction ensureInitialized() {\r\n    var expectedFrameContexts = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        expectedFrameContexts[_i] = arguments[_i];\r\n    }\r\n    if (!globalVars_1.GlobalVars.initializeCalled) {\r\n        throw new Error(\"The library has not yet been initialized\");\r\n    }\r\n    if (globalVars_1.GlobalVars.frameContext &&\r\n        expectedFrameContexts &&\r\n        expectedFrameContexts.length > 0) {\r\n        var found = false;\r\n        for (var i = 0; i < expectedFrameContexts.length; i++) {\r\n            if (expectedFrameContexts[i] === globalVars_1.GlobalVars.frameContext) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            throw new Error(\"This call is not allowed in the '\" + globalVars_1.GlobalVars.frameContext + \"' context\");\r\n        }\r\n    }\r\n}\r\nexports.ensureInitialized = ensureInitialized;\r\nfunction processMessage(evt) {\r\n    // Process only if we received a valid message\r\n    if (!evt || !evt.data || typeof evt.data !== \"object\") {\r\n        return;\r\n    }\r\n    // Process only if the message is coming from a different window and a valid origin\r\n    var messageSource = evt.source || evt.originalEvent.source;\r\n    var messageOrigin = evt.origin || evt.originalEvent.origin;\r\n    if (messageSource === globalVars_1.GlobalVars.currentWindow ||\r\n        (messageOrigin !== globalVars_1.GlobalVars.currentWindow.location.origin &&\r\n            !constants_1.validOriginRegExp.test(messageOrigin.toLowerCase()))) {\r\n        return;\r\n    }\r\n    // Update our parent and child relationships based on this message\r\n    updateRelationships(messageSource, messageOrigin);\r\n    // Handle the message\r\n    if (messageSource === globalVars_1.GlobalVars.parentWindow) {\r\n        handleParentMessage(evt);\r\n    }\r\n    else if (messageSource === globalVars_1.GlobalVars.childWindow) {\r\n        handleChildMessage(evt);\r\n    }\r\n}\r\nexports.processMessage = processMessage;\r\nfunction updateRelationships(messageSource, messageOrigin) {\r\n    // Determine whether the source of the message is our parent or child and update our\r\n    // window and origin pointer accordingly\r\n    if (!globalVars_1.GlobalVars.parentWindow || messageSource === globalVars_1.GlobalVars.parentWindow) {\r\n        globalVars_1.GlobalVars.parentWindow = messageSource;\r\n        globalVars_1.GlobalVars.parentOrigin = messageOrigin;\r\n    }\r\n    else if (!globalVars_1.GlobalVars.childWindow || messageSource === globalVars_1.GlobalVars.childWindow) {\r\n        globalVars_1.GlobalVars.childWindow = messageSource;\r\n        globalVars_1.GlobalVars.childOrigin = messageOrigin;\r\n    }\r\n    // Clean up pointers to closed parent and child windows\r\n    if (globalVars_1.GlobalVars.parentWindow && globalVars_1.GlobalVars.parentWindow.closed) {\r\n        globalVars_1.GlobalVars.parentWindow = null;\r\n        globalVars_1.GlobalVars.parentOrigin = null;\r\n    }\r\n    if (globalVars_1.GlobalVars.childWindow && globalVars_1.GlobalVars.childWindow.closed) {\r\n        globalVars_1.GlobalVars.childWindow = null;\r\n        globalVars_1.GlobalVars.childOrigin = null;\r\n    }\r\n    // If we have any messages in our queue, send them now\r\n    flushMessageQueue(globalVars_1.GlobalVars.parentWindow);\r\n    flushMessageQueue(globalVars_1.GlobalVars.childWindow);\r\n}\r\nfunction handleParentMessage(evt) {\r\n    if (\"id\" in evt.data) {\r\n        // Call any associated GlobalVars.callbacks\r\n        var message = evt.data;\r\n        var callback = globalVars_1.GlobalVars.callbacks[message.id];\r\n        if (callback) {\r\n            callback.apply(null, message.args);\r\n            // Remove the callback to ensure that the callback is called only once and to free up memory.\r\n            delete globalVars_1.GlobalVars.callbacks[message.id];\r\n        }\r\n    }\r\n    else if (\"func\" in evt.data) {\r\n        // Delegate the request to the proper handler\r\n        var message = evt.data;\r\n        var handler = globalVars_1.GlobalVars.handlers[message.func];\r\n        if (handler) {\r\n            // We don't expect any handler to respond at this point\r\n            handler.apply(this, message.args);\r\n        }\r\n    }\r\n}\r\nexports.handleParentMessage = handleParentMessage;\r\nfunction handleChildMessage(evt) {\r\n    if (\"id\" in evt.data && \"func\" in evt.data) {\r\n        // Try to delegate the request to the proper handler\r\n        var message_1 = evt.data;\r\n        var handler = globalVars_1.GlobalVars.handlers[message_1.func];\r\n        if (handler) {\r\n            var result = handler.apply(this, message_1.args);\r\n            if (result) {\r\n                sendMessageResponse(globalVars_1.GlobalVars.childWindow, message_1.id, Array.isArray(result) ? result : [result]);\r\n            }\r\n        }\r\n        else {\r\n            // Proxy to parent\r\n            var messageId = sendMessageRequest(globalVars_1.GlobalVars.parentWindow, message_1.func, message_1.args);\r\n            // tslint:disable-next-line:no-any\r\n            globalVars_1.GlobalVars.callbacks[messageId] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                if (globalVars_1.GlobalVars.childWindow) {\r\n                    sendMessageResponse(globalVars_1.GlobalVars.childWindow, message_1.id, args);\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\nfunction getTargetMessageQueue(targetWindow) {\r\n    return targetWindow === globalVars_1.GlobalVars.parentWindow\r\n        ? globalVars_1.GlobalVars.parentMessageQueue\r\n        : targetWindow === globalVars_1.GlobalVars.childWindow\r\n            ? globalVars_1.GlobalVars.childMessageQueue\r\n            : [];\r\n}\r\nfunction getTargetOrigin(targetWindow) {\r\n    return targetWindow === globalVars_1.GlobalVars.parentWindow\r\n        ? globalVars_1.GlobalVars.parentOrigin\r\n        : targetWindow === globalVars_1.GlobalVars.childWindow\r\n            ? globalVars_1.GlobalVars.childOrigin\r\n            : null;\r\n}\r\nfunction flushMessageQueue(targetWindow) {\r\n    var targetOrigin = getTargetOrigin(targetWindow);\r\n    var targetMessageQueue = getTargetMessageQueue(targetWindow);\r\n    while (targetWindow && targetOrigin && targetMessageQueue.length > 0) {\r\n        targetWindow.postMessage(targetMessageQueue.shift(), targetOrigin);\r\n    }\r\n}\r\nfunction waitForMessageQueue(targetWindow, callback) {\r\n    var messageQueueMonitor = globalVars_1.GlobalVars.currentWindow.setInterval(function () {\r\n        if (getTargetMessageQueue(targetWindow).length === 0) {\r\n            clearInterval(messageQueueMonitor);\r\n            callback();\r\n        }\r\n    }, 100);\r\n}\r\nexports.waitForMessageQueue = waitForMessageQueue;\r\nfunction sendMessageRequest(targetWindow, actionName, \r\n// tslint:disable-next-line: no-any\r\nargs) {\r\n    var request = createMessageRequest(actionName, args);\r\n    if (globalVars_1.GlobalVars.isFramelessWindow) {\r\n        if (globalVars_1.GlobalVars.currentWindow && globalVars_1.GlobalVars.currentWindow.nativeInterface) {\r\n            globalVars_1.GlobalVars.currentWindow.nativeInterface.framelessPostMessage(JSON.stringify(request));\r\n        }\r\n    }\r\n    else {\r\n        var targetOrigin = getTargetOrigin(targetWindow);\r\n        // If the target window isn't closed and we already know its origin, send the message right away; otherwise,\r\n        // queue the message and send it after the origin is established\r\n        if (targetWindow && targetOrigin) {\r\n            targetWindow.postMessage(request, targetOrigin);\r\n        }\r\n        else {\r\n            getTargetMessageQueue(targetWindow).push(request);\r\n        }\r\n    }\r\n    return request.id;\r\n}\r\nexports.sendMessageRequest = sendMessageRequest;\r\nfunction sendMessageResponse(targetWindow, id, \r\n// tslint:disable-next-line:no-any\r\nargs) {\r\n    var response = createMessageResponse(id, args);\r\n    var targetOrigin = getTargetOrigin(targetWindow);\r\n    if (targetWindow && targetOrigin) {\r\n        targetWindow.postMessage(response, targetOrigin);\r\n    }\r\n}\r\n// tslint:disable-next-line:no-any\r\nfunction createMessageRequest(func, args) {\r\n    return {\r\n        id: globalVars_1.GlobalVars.nextMessageId++,\r\n        func: func,\r\n        args: args || []\r\n    };\r\n}\r\n// tslint:disable-next-line:no-any\r\nfunction createMessageResponse(id, args) {\r\n    return {\r\n        id: id,\r\n        args: args || []\r\n    };\r\n}\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = __webpack_require__(3);\r\nexports.version = \"1.4.1\";\r\nexports.validOrigins = [\r\n    \"https://teams.microsoft.com\",\r\n    \"https://teams.microsoft.us\",\r\n    \"https://gov.teams.microsoft.us\",\r\n    \"https://dod.teams.microsoft.us\",\r\n    \"https://int.teams.microsoft.com\",\r\n    \"https://devspaces.skype.com\",\r\n    \"https://ssauth.skype.com\",\r\n    \"http://dev.local\",\r\n    \"http://dev.local:8080\",\r\n    \"https://msft.spoppe.com\",\r\n    \"https://*.sharepoint.com\",\r\n    \"https://*.sharepoint-df.com\",\r\n    \"https://*.sharepointonline.com\",\r\n    \"https://outlook.office.com\",\r\n    \"https://outlook-sdf.office.com\"\r\n];\r\n// Ensure these declarations stay in sync with the framework.\r\nexports.frameContexts = {\r\n    settings: \"settings\",\r\n    content: \"content\",\r\n    authentication: \"authentication\",\r\n    remove: \"remove\",\r\n    task: \"task\"\r\n};\r\nexports.validOriginRegExp = utils_1.generateRegExpFromUrls(exports.validOrigins);\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// This will return a reg expression a given url\r\nfunction generateRegExpFromUrl(url) {\r\n    var urlRegExpPart = \"^\";\r\n    var urlParts = url.split(\".\");\r\n    for (var j = 0; j < urlParts.length; j++) {\r\n        urlRegExpPart += (j > 0 ? \"[.]\" : \"\") + urlParts[j].replace(\"*\", \"[^/^.]+\");\r\n    }\r\n    urlRegExpPart += \"$\";\r\n    return urlRegExpPart;\r\n}\r\n// This will return a reg expression for list of url\r\nfunction generateRegExpFromUrls(urls) {\r\n    var urlRegExp = \"\";\r\n    for (var i = 0; i < urls.length; i++) {\r\n        urlRegExp += (i === 0 ? \"\" : \"|\") + generateRegExpFromUrl(urls[i]);\r\n    }\r\n    return new RegExp(urlRegExp);\r\n}\r\nexports.generateRegExpFromUrls = generateRegExpFromUrls;\r\nfunction getGenericOnCompleteHandler(errorMessage) {\r\n    return function (success, reason) {\r\n        if (!success) {\r\n            throw new Error(errorMessage ? errorMessage : reason);\r\n        }\r\n    };\r\n}\r\nexports.getGenericOnCompleteHandler = getGenericOnCompleteHandler;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar internalAPIs_1 = __webpack_require__(1);\r\nvar globalVars_1 = __webpack_require__(0);\r\nvar constants_1 = __webpack_require__(2);\r\nvar settings_1 = __webpack_require__(5);\r\nvar utils_1 = __webpack_require__(3);\r\n// ::::::::::::::::::::::: MicrosoftTeams SDK public API ::::::::::::::::::::\r\n/**\r\n * Initializes the library. This must be called before any other SDK calls\r\n * but after the frame is loaded successfully.\r\n */\r\nfunction initialize(hostWindow) {\r\n    if (hostWindow === void 0) { hostWindow = window; }\r\n    // Independent components might not know whether the SDK is initialized so might call it to be safe.\r\n    // Just no-op if that happens to make it easier to use.\r\n    if (!globalVars_1.GlobalVars.initializeCalled) {\r\n        globalVars_1.GlobalVars.initializeCalled = true;\r\n        // Undocumented field used to mock the window for unit tests\r\n        globalVars_1.GlobalVars.currentWindow = hostWindow;\r\n        // Listen for messages post to our window\r\n        var messageListener_1 = function (evt) { return internalAPIs_1.processMessage(evt); };\r\n        // If we are in an iframe, our parent window is the one hosting us (i.e., window.parent); otherwise,\r\n        // it's the window that opened us (i.e., window.opener)\r\n        globalVars_1.GlobalVars.parentWindow =\r\n            globalVars_1.GlobalVars.currentWindow.parent !== globalVars_1.GlobalVars.currentWindow.self\r\n                ? globalVars_1.GlobalVars.currentWindow.parent\r\n                : globalVars_1.GlobalVars.currentWindow.opener;\r\n        if (!globalVars_1.GlobalVars.parentWindow) {\r\n            globalVars_1.GlobalVars.isFramelessWindow = true;\r\n            window.onNativeMessage = internalAPIs_1.handleParentMessage;\r\n        }\r\n        else {\r\n            // For iFrame scenario, add listener to listen 'message'\r\n            globalVars_1.GlobalVars.currentWindow.addEventListener(\"message\", messageListener_1, false);\r\n        }\r\n        try {\r\n            // Send the initialized message to any origin, because at this point we most likely don't know the origin\r\n            // of the parent window, and this message contains no data that could pose a security risk.\r\n            globalVars_1.GlobalVars.parentOrigin = \"*\";\r\n            var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"initialize\", [constants_1.version]);\r\n            globalVars_1.GlobalVars.callbacks[messageId] = function (context, clientType) {\r\n                globalVars_1.GlobalVars.frameContext = context;\r\n                globalVars_1.GlobalVars.hostClientType = clientType;\r\n            };\r\n        }\r\n        finally {\r\n            globalVars_1.GlobalVars.parentOrigin = null;\r\n        }\r\n        // Undocumented function used to clear state between unit tests\r\n        this._uninitialize = function () {\r\n            if (globalVars_1.GlobalVars.frameContext) {\r\n                registerOnThemeChangeHandler(null);\r\n                registerFullScreenHandler(null);\r\n                registerBackButtonHandler(null);\r\n                registerBeforeUnloadHandler(null);\r\n            }\r\n            if (globalVars_1.GlobalVars.frameContext === constants_1.frameContexts.settings) {\r\n                settings_1.settings.registerOnSaveHandler(null);\r\n            }\r\n            if (globalVars_1.GlobalVars.frameContext === constants_1.frameContexts.remove) {\r\n                settings_1.settings.registerOnRemoveHandler(null);\r\n            }\r\n            if (!globalVars_1.GlobalVars.isFramelessWindow) {\r\n                globalVars_1.GlobalVars.currentWindow.removeEventListener(\"message\", messageListener_1, false);\r\n            }\r\n            globalVars_1.GlobalVars.initializeCalled = false;\r\n            globalVars_1.GlobalVars.parentWindow = null;\r\n            globalVars_1.GlobalVars.parentOrigin = null;\r\n            globalVars_1.GlobalVars.parentMessageQueue = [];\r\n            globalVars_1.GlobalVars.childWindow = null;\r\n            globalVars_1.GlobalVars.childOrigin = null;\r\n            globalVars_1.GlobalVars.childMessageQueue = [];\r\n            globalVars_1.GlobalVars.nextMessageId = 0;\r\n            globalVars_1.GlobalVars.callbacks = {};\r\n            globalVars_1.GlobalVars.frameContext = null;\r\n            globalVars_1.GlobalVars.hostClientType = null;\r\n            globalVars_1.GlobalVars.isFramelessWindow = false;\r\n        };\r\n    }\r\n    return new AppInitializationEvent();\r\n}\r\nexports.initialize = initialize;\r\n/**\r\n * Initializes the library. This must be called before any other SDK calls\r\n * but after the frame is loaded successfully.\r\n */\r\nfunction _uninitialize() { }\r\nexports._uninitialize = _uninitialize;\r\n/**\r\n * Enable print capability to support printing page using Ctrl+P and cmd+P\r\n */\r\nfunction enablePrintCapability() {\r\n    if (!globalVars_1.GlobalVars.printCapabilityEnabled) {\r\n        globalVars_1.GlobalVars.printCapabilityEnabled = true;\r\n        internalAPIs_1.ensureInitialized();\r\n        // adding ctrl+P and cmd+P handler\r\n        document.addEventListener(\"keydown\", function (event) {\r\n            if ((event.ctrlKey || event.metaKey) && event.keyCode === 80) {\r\n                print();\r\n                event.cancelBubble = true;\r\n                event.preventDefault();\r\n                event.stopImmediatePropagation();\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.enablePrintCapability = enablePrintCapability;\r\n/**\r\n * default print handler\r\n */\r\nfunction print() {\r\n    window.print();\r\n}\r\nexports.print = print;\r\n/**\r\n * Retrieves the current context the frame is running in.\r\n * @param callback The callback to invoke when the {@link Context} object is retrieved.\r\n */\r\nfunction getContext(callback) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"getContext\");\r\n    globalVars_1.GlobalVars.callbacks[messageId] = callback;\r\n}\r\nexports.getContext = getContext;\r\n/**\r\n * Registers a handler for theme changes.\r\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n * @param handler The handler to invoke when the user changes their theme.\r\n */\r\nfunction registerOnThemeChangeHandler(handler) {\r\n    internalAPIs_1.ensureInitialized();\r\n    globalVars_1.GlobalVars.themeChangeHandler = handler;\r\n    handler &&\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"registerHandler\", [\"themeChange\"]);\r\n}\r\nexports.registerOnThemeChangeHandler = registerOnThemeChangeHandler;\r\n/**\r\n * Registers a handler for changes from or to full-screen view for a tab.\r\n * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n * @param handler The handler to invoke when the user toggles full-screen view for a tab.\r\n */\r\nfunction registerFullScreenHandler(handler) {\r\n    internalAPIs_1.ensureInitialized();\r\n    globalVars_1.GlobalVars.fullScreenChangeHandler = handler;\r\n    handler &&\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"registerHandler\", [\"fullScreen\"]);\r\n}\r\nexports.registerFullScreenHandler = registerFullScreenHandler;\r\n/**\r\n * Registers a handler for user presses of the Team client's back button. Experiences that maintain an internal\r\n * navigation stack should use this handler to navigate the user back within their frame. If an app finds\r\n * that after running its back button handler it cannot handle the event it should call the navigateBack\r\n * method to ask the Teams client to handle it instead.\r\n * @param handler The handler to invoke when the user presses their Team client's back button.\r\n */\r\nfunction registerBackButtonHandler(handler) {\r\n    internalAPIs_1.ensureInitialized();\r\n    globalVars_1.GlobalVars.backButtonPressHandler = handler;\r\n    handler &&\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"registerHandler\", [\"backButton\"]);\r\n}\r\nexports.registerBackButtonHandler = registerBackButtonHandler;\r\n/**\r\n * Navigates back in the Teams client. See registerBackButtonHandler for more information on when\r\n * it's appropriate to use this method.\r\n */\r\nfunction navigateBack(onComplete) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"navigateBack\", []);\r\n    var errorMessage = \"Back navigation is not supported in the current client or context.\";\r\n    globalVars_1.GlobalVars.callbacks[messageId] = onComplete ? onComplete : utils_1.getGenericOnCompleteHandler(errorMessage);\r\n}\r\nexports.navigateBack = navigateBack;\r\n/**\r\n * Registers a handler to be called before the page is unloaded.\r\n * @param handler The handler to invoke before the page is unloaded. If this handler returns true the page should\r\n * invoke the readyToUnload function provided to it once it's ready to be unloaded.\r\n */\r\nfunction registerBeforeUnloadHandler(handler) {\r\n    internalAPIs_1.ensureInitialized();\r\n    globalVars_1.GlobalVars.beforeUnloadHandler = handler;\r\n    handler &&\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"registerHandler\", [\"beforeUnload\"]);\r\n}\r\nexports.registerBeforeUnloadHandler = registerBeforeUnloadHandler;\r\n/**\r\n * Registers a handler for when the user reconfigurated tab\r\n * @param handler The handler to invoke when the user click on Settings.\r\n */\r\nfunction registerChangeSettingsHandler(handler) {\r\n    internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n    globalVars_1.GlobalVars.changeSettingsHandler = handler;\r\n    handler && internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"registerHandler\", [\"changeSettings\"]);\r\n}\r\nexports.registerChangeSettingsHandler = registerChangeSettingsHandler;\r\n/**\r\n * Navigates the frame to a new cross-domain URL. The domain of this URL must match at least one of the\r\n * valid domains specified in the validDomains block of the manifest; otherwise, an exception will be\r\n * thrown. This function needs to be used only when navigating the frame to a URL in a different domain\r\n * than the current one in a way that keeps the app informed of the change and allows the SDK to\r\n * continue working.\r\n * @param url The URL to navigate the frame to.\r\n */\r\nfunction navigateCrossDomain(url, onComplete) {\r\n    internalAPIs_1.ensureInitialized(constants_1.frameContexts.content, constants_1.frameContexts.settings, constants_1.frameContexts.remove, constants_1.frameContexts.task);\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"navigateCrossDomain\", [\r\n        url\r\n    ]);\r\n    var errorMessage = \"Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest.\";\r\n    globalVars_1.GlobalVars.callbacks[messageId] = onComplete ? onComplete : utils_1.getGenericOnCompleteHandler(errorMessage);\r\n}\r\nexports.navigateCrossDomain = navigateCrossDomain;\r\n/**\r\n * Allows an app to retrieve for this user tabs that are owned by this app.\r\n * If no TabInstanceParameters are passed, the app defaults to favorite teams and favorite channels.\r\n * @param callback The callback to invoke when the {@link TabInstanceParameters} object is retrieved.\r\n * @param tabInstanceParameters OPTIONAL Flags that specify whether to scope call to favorite teams or channels.\r\n */\r\nfunction getTabInstances(callback, tabInstanceParameters) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"getTabInstances\", [\r\n        tabInstanceParameters\r\n    ]);\r\n    globalVars_1.GlobalVars.callbacks[messageId] = callback;\r\n}\r\nexports.getTabInstances = getTabInstances;\r\n/**\r\n * Allows an app to retrieve the most recently used tabs for this user.\r\n * @param callback The callback to invoke when the {@link TabInformation} object is retrieved.\r\n * @param tabInstanceParameters OPTIONAL Ignored, kept for future use\r\n */\r\nfunction getMruTabInstances(callback, tabInstanceParameters) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"getMruTabInstances\", [\r\n        tabInstanceParameters\r\n    ]);\r\n    globalVars_1.GlobalVars.callbacks[messageId] = callback;\r\n}\r\nexports.getMruTabInstances = getMruTabInstances;\r\n/**\r\n * Shares a deep link that a user can use to navigate back to a specific state in this page.\r\n * @param deepLinkParameters ID and label for the link and fallback URL.\r\n */\r\nfunction shareDeepLink(deepLinkParameters) {\r\n    internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n    internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"shareDeepLink\", [\r\n        deepLinkParameters.subEntityId,\r\n        deepLinkParameters.subEntityLabel,\r\n        deepLinkParameters.subEntityWebUrl\r\n    ]);\r\n}\r\nexports.shareDeepLink = shareDeepLink;\r\n/**\r\n * execute deep link API.\r\n * @param deepLink deep link.\r\n */\r\nfunction executeDeepLink(deepLink, onComplete) {\r\n    internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"executeDeepLink\", [\r\n        deepLink\r\n    ]);\r\n    globalVars_1.GlobalVars.callbacks[messageId] = onComplete ? onComplete : utils_1.getGenericOnCompleteHandler();\r\n}\r\nexports.executeDeepLink = executeDeepLink;\r\n/**\r\n * Navigates the Microsoft Teams app to the specified tab instance.\r\n * @param tabInstance The tab instance to navigate to.\r\n */\r\nfunction navigateToTab(tabInstance, onComplete) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"navigateToTab\", [\r\n        tabInstance\r\n    ]);\r\n    var errorMessage = \"Invalid internalTabInstanceId and/or channelId were/was provided\";\r\n    globalVars_1.GlobalVars.callbacks[messageId] = onComplete ? onComplete : utils_1.getGenericOnCompleteHandler(errorMessage);\r\n}\r\nexports.navigateToTab = navigateToTab;\r\nvar AppInitializationEvent = /** @class */ (function () {\r\n    function AppInitializationEvent() {\r\n    }\r\n    AppInitializationEvent.prototype.notifySuccess = function () {\r\n        internalAPIs_1.ensureInitialized();\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"appInitialization.success\", [constants_1.version]);\r\n    };\r\n    AppInitializationEvent.prototype.notifyFailure = function (appInitializationFailedRequest) {\r\n        internalAPIs_1.ensureInitialized();\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"appInitialization.failure\", [appInitializationFailedRequest.reason, appInitializationFailedRequest.message]);\r\n    };\r\n    return AppInitializationEvent;\r\n}());\r\nexports.AppInitializationEvent = AppInitializationEvent;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar internalAPIs_1 = __webpack_require__(1);\r\nvar globalVars_1 = __webpack_require__(0);\r\nvar constants_1 = __webpack_require__(2);\r\nvar utils_1 = __webpack_require__(3);\r\n/**\r\n * Namespace to interact with the settings-specific part of the SDK.\r\n * This object is usable only on the settings frame.\r\n */\r\nvar settings;\r\n(function (settings) {\r\n    var saveHandler;\r\n    var removeHandler;\r\n    globalVars_1.GlobalVars.handlers[\"settings.save\"] = handleSave;\r\n    globalVars_1.GlobalVars.handlers[\"settings.remove\"] = handleRemove;\r\n    /**\r\n     * Sets the validity state for the settings.\r\n     * The initial value is false, so the user cannot save the settings until this is called with true.\r\n     * @param validityState Indicates whether the save or remove button is enabled for the user.\r\n     */\r\n    function setValidityState(validityState) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.settings, constants_1.frameContexts.remove);\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"settings.setValidityState\", [\r\n            validityState\r\n        ]);\r\n    }\r\n    settings.setValidityState = setValidityState;\r\n    /**\r\n     * Gets the settings for the current instance.\r\n     * @param callback The callback to invoke when the {@link Settings} object is retrieved.\r\n     */\r\n    function getSettings(callback) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.content, constants_1.frameContexts.settings, constants_1.frameContexts.remove);\r\n        var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"settings.getSettings\");\r\n        globalVars_1.GlobalVars.callbacks[messageId] = callback;\r\n    }\r\n    settings.getSettings = getSettings;\r\n    /**\r\n     * Sets the settings for the current instance.\r\n     * This is an asynchronous operation; calls to getSettings are not guaranteed to reflect the changed state.\r\n     * @param settings The desired settings for this instance.\r\n     */\r\n    function setSettings(instanceSettings, onComplete) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.content, constants_1.frameContexts.settings);\r\n        var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"settings.setSettings\", [\r\n            instanceSettings\r\n        ]);\r\n        globalVars_1.GlobalVars.callbacks[messageId] = onComplete ? onComplete : utils_1.getGenericOnCompleteHandler();\r\n    }\r\n    settings.setSettings = setSettings;\r\n    /**\r\n     * Registers a handler for when the user attempts to save the settings. This handler should be used\r\n     * to create or update the underlying resource powering the content.\r\n     * The object passed to the handler must be used to notify whether to proceed with the save.\r\n     * Only one handler can be registered at a time. A subsequent registration replaces an existing registration.\r\n     * @param handler The handler to invoke when the user selects the save button.\r\n     */\r\n    function registerOnSaveHandler(handler) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.settings);\r\n        saveHandler = handler;\r\n        handler && internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"registerHandler\", [\"save\"]);\r\n    }\r\n    settings.registerOnSaveHandler = registerOnSaveHandler;\r\n    /**\r\n     * Registers a handler for user attempts to remove content. This handler should be used\r\n     * to remove the underlying resource powering the content.\r\n     * The object passed to the handler must be used to indicate whether to proceed with the removal.\r\n     * Only one handler may be registered at a time. Subsequent registrations will override the first.\r\n     * @param handler The handler to invoke when the user selects the remove button.\r\n     */\r\n    function registerOnRemoveHandler(handler) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.remove);\r\n        removeHandler = handler;\r\n        handler && internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"registerHandler\", [\"remove\"]);\r\n    }\r\n    settings.registerOnRemoveHandler = registerOnRemoveHandler;\r\n    function handleSave(result) {\r\n        var saveEvent = new SaveEventImpl(result);\r\n        if (saveHandler) {\r\n            saveHandler(saveEvent);\r\n        }\r\n        else {\r\n            // If no handler is registered, we assume success.\r\n            saveEvent.notifySuccess();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * Hide from docs, since this class is not directly used.\r\n     */\r\n    var SaveEventImpl = /** @class */ (function () {\r\n        function SaveEventImpl(result) {\r\n            this.notified = false;\r\n            this.result = result ? result : {};\r\n        }\r\n        SaveEventImpl.prototype.notifySuccess = function () {\r\n            this.ensureNotNotified();\r\n            internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"settings.save.success\");\r\n            this.notified = true;\r\n        };\r\n        SaveEventImpl.prototype.notifyFailure = function (reason) {\r\n            this.ensureNotNotified();\r\n            internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"settings.save.failure\", [reason]);\r\n            this.notified = true;\r\n        };\r\n        SaveEventImpl.prototype.ensureNotNotified = function () {\r\n            if (this.notified) {\r\n                throw new Error(\"The SaveEvent may only notify success or failure once.\");\r\n            }\r\n        };\r\n        return SaveEventImpl;\r\n    }());\r\n    function handleRemove() {\r\n        var removeEvent = new RemoveEventImpl();\r\n        if (removeHandler) {\r\n            removeHandler(removeEvent);\r\n        }\r\n        else {\r\n            // If no handler is registered, we assume success.\r\n            removeEvent.notifySuccess();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * Hide from docs, since this class is not directly used.\r\n     */\r\n    var RemoveEventImpl = /** @class */ (function () {\r\n        function RemoveEventImpl() {\r\n            this.notified = false;\r\n        }\r\n        RemoveEventImpl.prototype.notifySuccess = function () {\r\n            this.ensureNotNotified();\r\n            internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"settings.remove.success\");\r\n            this.notified = true;\r\n        };\r\n        RemoveEventImpl.prototype.notifyFailure = function (reason) {\r\n            this.ensureNotNotified();\r\n            internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"settings.remove.failure\", [reason]);\r\n            this.notified = true;\r\n        };\r\n        RemoveEventImpl.prototype.ensureNotNotified = function () {\r\n            if (this.notified) {\r\n                throw new Error(\"The removeEvent may only notify success or failure once.\");\r\n            }\r\n        };\r\n        return RemoveEventImpl;\r\n    }());\r\n})(settings = exports.settings || (exports.settings = {}));\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar internalAPIs_1 = __webpack_require__(1);\r\nvar globalVars_1 = __webpack_require__(0);\r\nvar constants_1 = __webpack_require__(2);\r\nvar utils_1 = __webpack_require__(3);\r\nvar ChildAppWindow = /** @class */ (function () {\r\n    function ChildAppWindow() {\r\n    }\r\n    ChildAppWindow.prototype.postMessage = function (message, onComplete) {\r\n        internalAPIs_1.ensureInitialized();\r\n        var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"messageForChild\", [\r\n            message\r\n        ]);\r\n        globalVars_1.GlobalVars.callbacks[messageId] = onComplete ? onComplete : utils_1.getGenericOnCompleteHandler();\r\n    };\r\n    ChildAppWindow.prototype.addEventListener = function (type, listener) {\r\n        if (type === \"message\") {\r\n            globalVars_1.GlobalVars.handlers[\"messageForParent\"] = listener;\r\n        }\r\n    };\r\n    return ChildAppWindow;\r\n}());\r\nexports.ChildAppWindow = ChildAppWindow;\r\nvar ParentAppWindow = /** @class */ (function () {\r\n    function ParentAppWindow() {\r\n    }\r\n    Object.defineProperty(ParentAppWindow, \"Instance\", {\r\n        get: function () {\r\n            // Do you need arguments? Make it a regular method instead.\r\n            return this._instance || (this._instance = new this());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ParentAppWindow.prototype.postMessage = function (message, onComplete) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.task);\r\n        var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"messageForParent\", [\r\n            message\r\n        ]);\r\n        globalVars_1.GlobalVars.callbacks[messageId] = onComplete ? onComplete : utils_1.getGenericOnCompleteHandler();\r\n    };\r\n    ParentAppWindow.prototype.addEventListener = function (type, listener) {\r\n        if (type === \"message\") {\r\n            globalVars_1.GlobalVars.handlers[\"messageForChild\"] = listener;\r\n        }\r\n    };\r\n    return ParentAppWindow;\r\n}());\r\nexports.ParentAppWindow = ParentAppWindow;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(__webpack_require__(8));\r\n__export(__webpack_require__(12));\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar menus_1 = __webpack_require__(9);\r\nexports.menus = menus_1.menus;\r\nvar privateAPIs_1 = __webpack_require__(10);\r\nexports.enterFullscreen = privateAPIs_1.enterFullscreen;\r\nexports.exitFullscreen = privateAPIs_1.exitFullscreen;\r\nexports.getChatMembers = privateAPIs_1.getChatMembers;\r\nexports.getConfigSetting = privateAPIs_1.getConfigSetting;\r\nexports.getUserJoinedTeams = privateAPIs_1.getUserJoinedTeams;\r\nexports.openFilePreview = privateAPIs_1.openFilePreview;\r\nexports.sendCustomMessage = privateAPIs_1.sendCustomMessage;\r\nexports.showNotification = privateAPIs_1.showNotification;\r\nexports.uploadCustomApp = privateAPIs_1.uploadCustomApp;\r\nvar conversations_1 = __webpack_require__(11);\r\nexports.conversations = conversations_1.conversations;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar internalAPIs_1 = __webpack_require__(1);\r\nvar globalVars_1 = __webpack_require__(0);\r\n/**\r\n * Namespace to interact with the menu-specific part of the SDK.\r\n * This object is used to show View Configuration, Action Menu and Navigation Bar Menu.\r\n *\r\n * @private\r\n * Hide from docs until feature is complete\r\n */\r\nvar menus;\r\n(function (menus) {\r\n    /**\r\n     * Represents information about menu item for Action Menu and Navigation Bar Menu.\r\n     */\r\n    var MenuItem = /** @class */ (function () {\r\n        function MenuItem() {\r\n            /**\r\n             * State of the menu item\r\n             */\r\n            this.enabled = true;\r\n        }\r\n        return MenuItem;\r\n    }());\r\n    menus.MenuItem = MenuItem;\r\n    /**\r\n     * Represents information about type of list to display in Navigation Bar Menu.\r\n     */\r\n    var MenuListType;\r\n    (function (MenuListType) {\r\n        MenuListType[\"dropDown\"] = \"dropDown\";\r\n        MenuListType[\"popOver\"] = \"popOver\";\r\n    })(MenuListType = menus.MenuListType || (menus.MenuListType = {}));\r\n    var navBarMenuItemPressHandler;\r\n    globalVars_1.GlobalVars.handlers[\"navBarMenuItemPress\"] = handleNavBarMenuItemPress;\r\n    var actionMenuItemPressHandler;\r\n    globalVars_1.GlobalVars.handlers[\"actionMenuItemPress\"] = handleActionMenuItemPress;\r\n    var viewConfigItemPressHandler;\r\n    globalVars_1.GlobalVars.handlers[\"setModuleView\"] = handleViewConfigItemPress;\r\n    /**\r\n     * Registers list of view configurations and it's handler.\r\n     * Handler is responsible for listening selection of View Configuration.\r\n     * @param viewConfig List of view configurations. Minimum 1 value is required.\r\n     * @param handler The handler to invoke when the user selects view configuration.\r\n     */\r\n    function setUpViews(viewConfig, handler) {\r\n        internalAPIs_1.ensureInitialized();\r\n        viewConfigItemPressHandler = handler;\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"setUpViews\", [viewConfig]);\r\n    }\r\n    menus.setUpViews = setUpViews;\r\n    function handleViewConfigItemPress(id) {\r\n        if (!viewConfigItemPressHandler || !viewConfigItemPressHandler(id)) {\r\n            internalAPIs_1.ensureInitialized();\r\n            internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"viewConfigItemPress\", [id]);\r\n        }\r\n    }\r\n    /**\r\n     * Used to set menu items on the Navigation Bar. If icon is available, icon will be shown, otherwise title will be shown.\r\n     * @param items List of MenuItems for Navigation Bar Menu.\r\n     * @param handler The handler to invoke when the user selects menu item.\r\n     */\r\n    function setNavBarMenu(items, handler) {\r\n        internalAPIs_1.ensureInitialized();\r\n        navBarMenuItemPressHandler = handler;\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"setNavBarMenu\", [items]);\r\n    }\r\n    menus.setNavBarMenu = setNavBarMenu;\r\n    function handleNavBarMenuItemPress(id) {\r\n        if (!navBarMenuItemPressHandler || !navBarMenuItemPressHandler(id)) {\r\n            internalAPIs_1.ensureInitialized();\r\n            internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"handleNavBarMenuItemPress\", [id]);\r\n        }\r\n    }\r\n    /**\r\n     * Used to show Action Menu.\r\n     * @param params Parameters for Menu Parameters\r\n     * @param handler The handler to invoke when the user selects menu item.\r\n     */\r\n    function showActionMenu(params, handler) {\r\n        internalAPIs_1.ensureInitialized();\r\n        actionMenuItemPressHandler = handler;\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"showActionMenu\", [params]);\r\n    }\r\n    menus.showActionMenu = showActionMenu;\r\n    function handleActionMenuItemPress(id) {\r\n        if (!actionMenuItemPressHandler || !actionMenuItemPressHandler(id)) {\r\n            internalAPIs_1.ensureInitialized();\r\n            internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"handleActionMenuItemPress\", [id]);\r\n        }\r\n    }\r\n})(menus = exports.menus || (exports.menus = {}));\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar internalAPIs_1 = __webpack_require__(1);\r\nvar globalVars_1 = __webpack_require__(0);\r\nvar constants_1 = __webpack_require__(2);\r\nvar utils_1 = __webpack_require__(3);\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Allows an app to retrieve information of all user joined teams\r\n * @param callback The callback to invoke when the {@link TeamInstanceParameters} object is retrieved.\r\n * @param teamInstanceParameters OPTIONAL Flags that specify whether to scope call to favorite teams\r\n */\r\nfunction getUserJoinedTeams(callback, teamInstanceParameters) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"getUserJoinedTeams\", [\r\n        teamInstanceParameters\r\n    ]);\r\n    globalVars_1.GlobalVars.callbacks[messageId] = callback;\r\n}\r\nexports.getUserJoinedTeams = getUserJoinedTeams;\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Place the tab into full-screen mode.\r\n */\r\nfunction enterFullscreen() {\r\n    internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n    internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"enterFullscreen\", []);\r\n}\r\nexports.enterFullscreen = enterFullscreen;\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Reverts the tab into normal-screen mode.\r\n */\r\nfunction exitFullscreen() {\r\n    internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n    internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"exitFullscreen\", []);\r\n}\r\nexports.exitFullscreen = exitFullscreen;\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n * Opens a client-friendly preview of the specified file.\r\n * @param file The file to preview.\r\n */\r\nfunction openFilePreview(filePreviewParameters) {\r\n    internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n    var params = [\r\n        filePreviewParameters.entityId,\r\n        filePreviewParameters.title,\r\n        filePreviewParameters.description,\r\n        filePreviewParameters.type,\r\n        filePreviewParameters.objectUrl,\r\n        filePreviewParameters.downloadUrl,\r\n        filePreviewParameters.webPreviewUrl,\r\n        filePreviewParameters.webEditUrl,\r\n        filePreviewParameters.baseUrl,\r\n        filePreviewParameters.editFile,\r\n        filePreviewParameters.subEntityId\r\n    ];\r\n    internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"openFilePreview\", params);\r\n}\r\nexports.openFilePreview = openFilePreview;\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n * display notification API.\r\n * @param message Notification message.\r\n * @param notificationType Notification type\r\n */\r\nfunction showNotification(showNotificationParameters) {\r\n    internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n    var params = [\r\n        showNotificationParameters.message,\r\n        showNotificationParameters.notificationType\r\n    ];\r\n    internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"showNotification\", params);\r\n}\r\nexports.showNotification = showNotification;\r\n/**\r\n * @private\r\n * Hide from docs.\r\n * ------\r\n * Upload a custom App manifest directly to both team and personal scopes.\r\n * This method works just for the first party Apps.\r\n */\r\nfunction uploadCustomApp(manifestBlob, onComplete) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"uploadCustomApp\", [\r\n        manifestBlob\r\n    ]);\r\n    globalVars_1.GlobalVars.callbacks[messageId] = onComplete ? onComplete : utils_1.getGenericOnCompleteHandler();\r\n}\r\nexports.uploadCustomApp = uploadCustomApp;\r\n/**\r\n * @private\r\n * Internal use only\r\n * Sends a custom action message to Teams.\r\n * @param actionName Specifies name of the custom action to be sent\r\n * @param args Specifies additional arguments passed to the action\r\n * @returns id of sent message\r\n */\r\nfunction sendCustomMessage(actionName, \r\n// tslint:disable-next-line:no-any\r\nargs) {\r\n    internalAPIs_1.ensureInitialized();\r\n    return internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, actionName, args);\r\n}\r\nexports.sendCustomMessage = sendCustomMessage;\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Allows an app to retrieve information of all chat members\r\n * Because a malicious party run your content in a browser, this value should\r\n * be used only as a hint as to who the members are and never as proof of membership.\r\n * @param callback The callback to invoke when the {@link ChatMembersInformation} object is retrieved.\r\n */\r\nfunction getChatMembers(callback) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"getChatMembers\");\r\n    globalVars_1.GlobalVars.callbacks[messageId] = callback;\r\n}\r\nexports.getChatMembers = getChatMembers;\r\n/**\r\n * @private\r\n * Hide from docs\r\n * ------\r\n * Allows an app to get the configuration setting value\r\n * @param callback The callback to invoke when the value is retrieved.\r\n * @param key The key for the config setting\r\n */\r\nfunction getConfigSetting(callback, key) {\r\n    internalAPIs_1.ensureInitialized();\r\n    var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"getConfigSetting\", [\r\n        key\r\n    ]);\r\n    globalVars_1.GlobalVars.callbacks[messageId] = callback;\r\n}\r\nexports.getConfigSetting = getConfigSetting;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar internalAPIs_1 = __webpack_require__(1);\r\nvar globalVars_1 = __webpack_require__(0);\r\nvar constants_1 = __webpack_require__(2);\r\n/**\r\n * Namespace to interact with the conversational subEntities inside the tab\r\n */\r\nvar conversations;\r\n(function (conversations) {\r\n    /**\r\n    * @private\r\n    * Hide from docs\r\n    * --------------\r\n    * Allows the user to start or continue a conversation with each subentity inside the tab\r\n    */\r\n    function openConversation(openConversationRequest) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n        var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"conversations.openConversation\", [{\r\n                title: openConversationRequest.title,\r\n                subEntityId: openConversationRequest.subEntityId,\r\n                conversationId: openConversationRequest.conversationId\r\n            }]);\r\n        globalVars_1.GlobalVars.onCloseConversationHandler = openConversationRequest.onCloseConversation;\r\n        globalVars_1.GlobalVars.onStartConversationHandler = openConversationRequest.onStartConversation;\r\n        globalVars_1.GlobalVars.callbacks[messageId] = function (status, reason) {\r\n            if (!status) {\r\n                throw new Error(reason);\r\n            }\r\n        };\r\n    }\r\n    conversations.openConversation = openConversation;\r\n    /**\r\n    * @private\r\n    * Hide from docs\r\n    * --------------\r\n    * Allows the user to close the conversation in the right pane\r\n    */\r\n    function closeConversation() {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"conversations.closeConversation\");\r\n        globalVars_1.GlobalVars.onCloseConversationHandler = null;\r\n        globalVars_1.GlobalVars.onStartConversationHandler = null;\r\n    }\r\n    conversations.closeConversation = closeConversation;\r\n})(conversations = exports.conversations || (exports.conversations = {}));\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar authentication_1 = __webpack_require__(13);\r\nexports.authentication = authentication_1.authentication;\r\nvar publicAPIs_1 = __webpack_require__(4);\r\nexports.enablePrintCapability = publicAPIs_1.enablePrintCapability;\r\nexports.executeDeepLink = publicAPIs_1.executeDeepLink;\r\nexports.getContext = publicAPIs_1.getContext;\r\nexports.getMruTabInstances = publicAPIs_1.getMruTabInstances;\r\nexports.getTabInstances = publicAPIs_1.getTabInstances;\r\nexports.initialize = publicAPIs_1.initialize;\r\nexports.navigateBack = publicAPIs_1.navigateBack;\r\nexports.navigateCrossDomain = publicAPIs_1.navigateCrossDomain;\r\nexports.navigateToTab = publicAPIs_1.navigateToTab;\r\nexports.print = publicAPIs_1.print;\r\nexports.registerBackButtonHandler = publicAPIs_1.registerBackButtonHandler;\r\nexports.registerBeforeUnloadHandler = publicAPIs_1.registerBeforeUnloadHandler;\r\nexports.registerChangeSettingsHandler = publicAPIs_1.registerChangeSettingsHandler;\r\nexports.registerFullScreenHandler = publicAPIs_1.registerFullScreenHandler;\r\nexports.registerOnThemeChangeHandler = publicAPIs_1.registerOnThemeChangeHandler;\r\nexports.shareDeepLink = publicAPIs_1.shareDeepLink;\r\nvar settings_1 = __webpack_require__(5);\r\nexports.settings = settings_1.settings;\r\nvar tasks_1 = __webpack_require__(14);\r\nexports.tasks = tasks_1.tasks;\r\nvar appWindow_1 = __webpack_require__(6);\r\nexports.ChildAppWindow = appWindow_1.ChildAppWindow;\r\nexports.ParentAppWindow = appWindow_1.ParentAppWindow;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar internalAPIs_1 = __webpack_require__(1);\r\nvar globalVars_1 = __webpack_require__(0);\r\nvar constants_1 = __webpack_require__(2);\r\n/**\r\n * Namespace to interact with the authentication-specific part of the SDK.\r\n * This object is used for starting or completing authentication flows.\r\n */\r\nvar authentication;\r\n(function (authentication) {\r\n    var authParams;\r\n    var authWindowMonitor;\r\n    globalVars_1.GlobalVars.handlers[\"authentication.authenticate.success\"] = handleSuccess;\r\n    globalVars_1.GlobalVars.handlers[\"authentication.authenticate.failure\"] = handleFailure;\r\n    /**\r\n     * Registers the authentication GlobalVars.handlers\r\n     * @param authenticateParameters A set of values that configure the authentication pop-up.\r\n     */\r\n    function registerAuthenticationHandlers(authenticateParameters) {\r\n        authParams = authenticateParameters;\r\n    }\r\n    authentication.registerAuthenticationHandlers = registerAuthenticationHandlers;\r\n    /**\r\n     * Initiates an authentication request, which opens a new window with the specified settings.\r\n     */\r\n    function authenticate(authenticateParameters) {\r\n        var authenticateParams = authenticateParameters !== undefined\r\n            ? authenticateParameters\r\n            : authParams;\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.content, constants_1.frameContexts.settings, constants_1.frameContexts.remove, constants_1.frameContexts.task);\r\n        if (globalVars_1.GlobalVars.hostClientType === \"desktop\" /* desktop */ ||\r\n            globalVars_1.GlobalVars.hostClientType === \"android\" /* android */ ||\r\n            globalVars_1.GlobalVars.hostClientType === \"ios\" /* ios */ ||\r\n            globalVars_1.GlobalVars.hostClientType === \"rigel\" /* rigel */) {\r\n            // Convert any relative URLs into absolute URLs before sending them over to the parent window.\r\n            var link = document.createElement(\"a\");\r\n            link.href = authenticateParams.url;\r\n            // Ask the parent window to open an authentication window with the parameters provided by the caller.\r\n            var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"authentication.authenticate\", [link.href, authenticateParams.width, authenticateParams.height]);\r\n            globalVars_1.GlobalVars.callbacks[messageId] = function (success, response) {\r\n                if (success) {\r\n                    authenticateParams.successCallback(response);\r\n                }\r\n                else {\r\n                    authenticateParams.failureCallback(response);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            // Open an authentication window with the parameters provided by the caller.\r\n            openAuthenticationWindow(authenticateParams);\r\n        }\r\n    }\r\n    authentication.authenticate = authenticate;\r\n    /**\r\n     * @private\r\n     * Hide from docs.\r\n     * ------\r\n     * Requests an Azure AD token to be issued on behalf of the app. The token is acquired from the cache\r\n     * if it is not expired. Otherwise a request is sent to Azure AD to obtain a new token.\r\n     * @param authTokenRequest A set of values that configure the token request.\r\n     */\r\n    function getAuthToken(authTokenRequest) {\r\n        internalAPIs_1.ensureInitialized();\r\n        var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"authentication.getAuthToken\", [authTokenRequest.resources]);\r\n        globalVars_1.GlobalVars.callbacks[messageId] = function (success, result) {\r\n            if (success) {\r\n                authTokenRequest.successCallback(result);\r\n            }\r\n            else {\r\n                authTokenRequest.failureCallback(result);\r\n            }\r\n        };\r\n    }\r\n    authentication.getAuthToken = getAuthToken;\r\n    /**\r\n     * @private\r\n     * Hide from docs.\r\n     * ------\r\n     * Requests the decoded Azure AD user identity on behalf of the app.\r\n     */\r\n    function getUser(userRequest) {\r\n        internalAPIs_1.ensureInitialized();\r\n        var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"authentication.getUser\");\r\n        globalVars_1.GlobalVars.callbacks[messageId] = function (success, result) {\r\n            if (success) {\r\n                userRequest.successCallback(result);\r\n            }\r\n            else {\r\n                userRequest.failureCallback(result);\r\n            }\r\n        };\r\n    }\r\n    authentication.getUser = getUser;\r\n    function closeAuthenticationWindow() {\r\n        // Stop monitoring the authentication window\r\n        stopAuthenticationWindowMonitor();\r\n        // Try to close the authentication window and clear all properties associated with it\r\n        try {\r\n            if (globalVars_1.GlobalVars.childWindow) {\r\n                globalVars_1.GlobalVars.childWindow.close();\r\n            }\r\n        }\r\n        finally {\r\n            globalVars_1.GlobalVars.childWindow = null;\r\n            globalVars_1.GlobalVars.childOrigin = null;\r\n        }\r\n    }\r\n    function openAuthenticationWindow(authenticateParameters) {\r\n        authParams = authenticateParameters;\r\n        // Close the previously opened window if we have one\r\n        closeAuthenticationWindow();\r\n        // Start with a sensible default size\r\n        var width = authParams.width || 600;\r\n        var height = authParams.height || 400;\r\n        // Ensure that the new window is always smaller than our app's window so that it never fully covers up our app\r\n        width = Math.min(width, globalVars_1.GlobalVars.currentWindow.outerWidth - 400);\r\n        height = Math.min(height, globalVars_1.GlobalVars.currentWindow.outerHeight - 200);\r\n        // Convert any relative URLs into absolute URLs before sending them over to the parent window\r\n        var link = document.createElement(\"a\");\r\n        link.href = authParams.url;\r\n        // We are running in the browser, so we need to center the new window ourselves\r\n        var left = typeof globalVars_1.GlobalVars.currentWindow.screenLeft !== \"undefined\"\r\n            ? globalVars_1.GlobalVars.currentWindow.screenLeft\r\n            : globalVars_1.GlobalVars.currentWindow.screenX;\r\n        var top = typeof globalVars_1.GlobalVars.currentWindow.screenTop !== \"undefined\"\r\n            ? globalVars_1.GlobalVars.currentWindow.screenTop\r\n            : globalVars_1.GlobalVars.currentWindow.screenY;\r\n        left += globalVars_1.GlobalVars.currentWindow.outerWidth / 2 - width / 2;\r\n        top += globalVars_1.GlobalVars.currentWindow.outerHeight / 2 - height / 2;\r\n        // Open a child window with a desired set of standard browser features\r\n        globalVars_1.GlobalVars.childWindow = globalVars_1.GlobalVars.currentWindow.open(link.href, \"_blank\", \"toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top=\" +\r\n            top +\r\n            \", left=\" +\r\n            left +\r\n            \", width=\" +\r\n            width +\r\n            \", height=\" +\r\n            height);\r\n        if (globalVars_1.GlobalVars.childWindow) {\r\n            // Start monitoring the authentication window so that we can detect if it gets closed before the flow completes\r\n            startAuthenticationWindowMonitor();\r\n        }\r\n        else {\r\n            // If we failed to open the window, fail the authentication flow\r\n            handleFailure(\"FailedToOpenWindow\");\r\n        }\r\n    }\r\n    function stopAuthenticationWindowMonitor() {\r\n        if (authWindowMonitor) {\r\n            clearInterval(authWindowMonitor);\r\n            authWindowMonitor = 0;\r\n        }\r\n        delete globalVars_1.GlobalVars.handlers[\"initialize\"];\r\n        delete globalVars_1.GlobalVars.handlers[\"navigateCrossDomain\"];\r\n    }\r\n    function startAuthenticationWindowMonitor() {\r\n        // Stop the previous window monitor if one is running\r\n        stopAuthenticationWindowMonitor();\r\n        // Create an interval loop that\r\n        // - Notifies the caller of failure if it detects that the authentication window is closed\r\n        // - Keeps pinging the authentication window while it is open to re-establish\r\n        //   contact with any pages along the authentication flow that need to communicate\r\n        //   with us\r\n        authWindowMonitor = globalVars_1.GlobalVars.currentWindow.setInterval(function () {\r\n            if (!globalVars_1.GlobalVars.childWindow || globalVars_1.GlobalVars.childWindow.closed) {\r\n                handleFailure(\"CancelledByUser\");\r\n            }\r\n            else {\r\n                var savedChildOrigin = globalVars_1.GlobalVars.childOrigin;\r\n                try {\r\n                    globalVars_1.GlobalVars.childOrigin = \"*\";\r\n                    internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.childWindow, \"ping\");\r\n                }\r\n                finally {\r\n                    globalVars_1.GlobalVars.childOrigin = savedChildOrigin;\r\n                }\r\n            }\r\n        }, 100);\r\n        // Set up an initialize-message handler that gives the authentication window its frame context\r\n        globalVars_1.GlobalVars.handlers[\"initialize\"] = function () {\r\n            return [constants_1.frameContexts.authentication, globalVars_1.GlobalVars.hostClientType];\r\n        };\r\n        // Set up a navigateCrossDomain message handler that blocks cross-domain re-navigation attempts\r\n        // in the authentication window. We could at some point choose to implement this method via a call to\r\n        // authenticationWindow.location.href = url; however, we would first need to figure out how to\r\n        // validate the URL against the tab's list of valid domains.\r\n        globalVars_1.GlobalVars.handlers[\"navigateCrossDomain\"] = function (url) {\r\n            return false;\r\n        };\r\n    }\r\n    /**\r\n     * Notifies the frame that initiated this authentication request that the request was successful.\r\n     * This function is usable only on the authentication window.\r\n     * This call causes the authentication window to be closed.\r\n     * @param result Specifies a result for the authentication. If specified, the frame that initiated the authentication pop-up receives this value in its callback.\r\n     * @param callbackUrl Specifies the url to redirect back to if the client is Win32 Outlook.\r\n     */\r\n    function notifySuccess(result, callbackUrl) {\r\n        redirectIfWin32Outlook(callbackUrl, \"result\", result);\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.authentication);\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"authentication.authenticate.success\", [\r\n            result\r\n        ]);\r\n        // Wait for the message to be sent before closing the window\r\n        internalAPIs_1.waitForMessageQueue(globalVars_1.GlobalVars.parentWindow, function () { return setTimeout(function () { return globalVars_1.GlobalVars.currentWindow.close(); }, 200); });\r\n    }\r\n    authentication.notifySuccess = notifySuccess;\r\n    /**\r\n     * Notifies the frame that initiated this authentication request that the request failed.\r\n     * This function is usable only on the authentication window.\r\n     * This call causes the authentication window to be closed.\r\n     * @param result Specifies a result for the authentication. If specified, the frame that initiated the authentication pop-up receives this value in its callback.\r\n     * @param callbackUrl Specifies the url to redirect back to if the client is Win32 Outlook.\r\n     */\r\n    function notifyFailure(reason, callbackUrl) {\r\n        redirectIfWin32Outlook(callbackUrl, \"reason\", reason);\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.authentication);\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"authentication.authenticate.failure\", [\r\n            reason\r\n        ]);\r\n        // Wait for the message to be sent before closing the window\r\n        internalAPIs_1.waitForMessageQueue(globalVars_1.GlobalVars.parentWindow, function () { return setTimeout(function () { return globalVars_1.GlobalVars.currentWindow.close(); }, 200); });\r\n    }\r\n    authentication.notifyFailure = notifyFailure;\r\n    function handleSuccess(result) {\r\n        try {\r\n            if (authParams && authParams.successCallback) {\r\n                authParams.successCallback(result);\r\n            }\r\n        }\r\n        finally {\r\n            authParams = null;\r\n            closeAuthenticationWindow();\r\n        }\r\n    }\r\n    function handleFailure(reason) {\r\n        try {\r\n            if (authParams && authParams.failureCallback) {\r\n                authParams.failureCallback(reason);\r\n            }\r\n        }\r\n        finally {\r\n            authParams = null;\r\n            closeAuthenticationWindow();\r\n        }\r\n    }\r\n    /**\r\n     * Validates that the callbackUrl param is a valid connector url, appends the result/reason and authSuccess/authFailure as URL fragments and redirects the window\r\n     * @param callbackUrl - the connectors url to redirect to\r\n     * @param key - \"result\" in case of success and \"reason\" in case of failure\r\n     * @param value - the value of the passed result/reason parameter\r\n     */\r\n    function redirectIfWin32Outlook(callbackUrl, key, value) {\r\n        if (callbackUrl) {\r\n            var link = document.createElement(\"a\");\r\n            link.href = decodeURIComponent(callbackUrl);\r\n            if (link.host &&\r\n                link.host !== window.location.host &&\r\n                link.host === \"outlook.office.com\" &&\r\n                link.search.indexOf(\"client_type=Win32_Outlook\") > -1) {\r\n                if (key && key === \"result\") {\r\n                    if (value) {\r\n                        link.href = updateUrlParameter(link.href, \"result\", value);\r\n                    }\r\n                    globalVars_1.GlobalVars.currentWindow.location.assign(updateUrlParameter(link.href, \"authSuccess\", \"\"));\r\n                }\r\n                if (key && key === \"reason\") {\r\n                    if (value) {\r\n                        link.href = updateUrlParameter(link.href, \"reason\", value);\r\n                    }\r\n                    globalVars_1.GlobalVars.currentWindow.location.assign(updateUrlParameter(link.href, \"authFailure\", \"\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Appends either result or reason as a fragment to the 'callbackUrl'\r\n     * @param uri - the url to modify\r\n     * @param key - the fragment key\r\n     * @param value - the fragment value\r\n     */\r\n    function updateUrlParameter(uri, key, value) {\r\n        var i = uri.indexOf(\"#\");\r\n        var hash = i === -1 ? \"#\" : uri.substr(i);\r\n        hash = hash + \"&\" + key + (value !== \"\" ? \"=\" + value : \"\");\r\n        uri = i === -1 ? uri : uri.substr(0, i);\r\n        return uri + hash;\r\n    }\r\n})(authentication = exports.authentication || (exports.authentication = {}));\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar internalAPIs_1 = __webpack_require__(1);\r\nvar globalVars_1 = __webpack_require__(0);\r\nvar constants_1 = __webpack_require__(2);\r\nvar appWindow_1 = __webpack_require__(6);\r\n/**\r\n * Namespace to interact with the task module-specific part of the SDK.\r\n * This object is usable only on the content frame.\r\n */\r\nvar tasks;\r\n(function (tasks) {\r\n    /**\r\n     * Allows an app to open the task module.\r\n     * @param taskInfo An object containing the parameters of the task module\r\n     * @param submitHandler Handler to call when the task module is completed\r\n     */\r\n    function startTask(taskInfo, submitHandler) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.content);\r\n        var messageId = internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"tasks.startTask\", [\r\n            taskInfo\r\n        ]);\r\n        globalVars_1.GlobalVars.callbacks[messageId] = submitHandler;\r\n        return new appWindow_1.ChildAppWindow();\r\n    }\r\n    tasks.startTask = startTask;\r\n    /**\r\n     * Update height/width task info properties.\r\n     * @param taskInfo An object containing width and height properties\r\n     */\r\n    function updateTask(taskInfo) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.content, constants_1.frameContexts.task);\r\n        var width = taskInfo.width, height = taskInfo.height, extra = __rest(taskInfo, [\"width\", \"height\"]);\r\n        if (!Object.keys(extra).length) {\r\n            internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"tasks.updateTask\", [taskInfo]);\r\n        }\r\n        else {\r\n            throw new Error(\"updateTask requires a taskInfo argument containing only width and height\");\r\n        }\r\n    }\r\n    tasks.updateTask = updateTask;\r\n    /**\r\n     * Submit the task module.\r\n     * @param result Contains the result to be sent to the bot or the app. Typically a JSON object or a serialized version of it\r\n     * @param appIds Helps to validate that the call originates from the same appId as the one that invoked the task module\r\n     */\r\n    function submitTask(result, appIds) {\r\n        internalAPIs_1.ensureInitialized(constants_1.frameContexts.content, constants_1.frameContexts.task);\r\n        // Send tasks.completeTask instead of tasks.submitTask message for backward compatibility with Mobile clients\r\n        internalAPIs_1.sendMessageRequest(globalVars_1.GlobalVars.parentWindow, \"tasks.completeTask\", [\r\n            result,\r\n            Array.isArray(appIds) ? appIds : [appIds]\r\n        ]);\r\n    }\r\n    tasks.submitTask = submitTask;\r\n})(tasks = exports.tasks || (exports.tasks = {}));\r\n\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=MicrosoftTeams.min.js.map","export let inputs = {};\r\nexport let container = document.createElement(\"div\");\r\ncontainer.classList.add(\"moduleContainer\");\r\nlet isInitializedCalled = false;\r\nexport function addModule(config) {\r\n    var element = document.createElement(\"div\");\r\n    var button = document.createElement(\"button\");\r\n    button.appendChild(document.createTextNode(config.name));\r\n    button.id = \"button-\" + config.name;\r\n    element.appendChild(button);\r\n    element.appendChild(document.createElement(\"br\"));\r\n    if (config.inputs) {\r\n        element.appendChild(document.createElement(\"br\"));\r\n        for (var i = 0; i < config.inputs.length; i++) {\r\n            var label = document.createElement(\"label\");\r\n            label.appendChild(document.createTextNode(config.inputs[i].name + \":\"));\r\n            element.appendChild(label);\r\n            element.appendChild(document.createElement(\"br\"));\r\n            var input;\r\n            var valueGetter;\r\n            switch (config.inputs[i].type) {\r\n                case \"string\":\r\n                    input = document.createElement(\"input\");\r\n                    valueGetter = function () {\r\n                        return input.value;\r\n                    };\r\n                    break;\r\n                case \"boolean\":\r\n                    input = document.createElement(\"input\");\r\n                    input.type = \"checkbox\";\r\n                    valueGetter = function () {\r\n                        return input.checked;\r\n                    };\r\n                    break;\r\n                case \"object\":\r\n                    input = document.createElement(\"textarea\");\r\n                    valueGetter = function () {\r\n                        input.style.backgroundColor = \"\";\r\n                        try {\r\n                            return JSON.parse(input.value);\r\n                        }\r\n                        catch (e) {\r\n                            input.style.backgroundColor = \"red\";\r\n                            return null;\r\n                        }\r\n                    };\r\n                    break;\r\n            }\r\n            config.inputs[i].valueGetter = valueGetter;\r\n            input.id = \"input-\" + config.name + \"-\" + i;\r\n            element.appendChild(input);\r\n            inputs[input.id] = input;\r\n            element.appendChild(document.createElement(\"br\"));\r\n        }\r\n    }\r\n    if (config.hasOutput) {\r\n        var label = document.createElement(\"label\");\r\n        element.appendChild(document.createElement(\"br\"));\r\n        label.appendChild(document.createTextNode(\"Output:\"));\r\n        element.appendChild(label);\r\n        element.appendChild(document.createElement(\"br\"));\r\n        var textarea = document.createElement(\"textarea\");\r\n        textarea.id = \"textarea-\" + config.name;\r\n        element.appendChild(textarea);\r\n    }\r\n    container.appendChild(element);\r\n    button.addEventListener(\"click\", function () {\r\n        if (config.name == \"initialize\") {\r\n            isInitializedCalled = true;\r\n        }\r\n        else if (config.initializedRequired && !isInitializedCalled) {\r\n            // Get the modal\r\n            var modal = document.getElementById(\"myModal\");\r\n            var messageBox = document.getElementById(\"errorMessage\");\r\n            messageBox.innerText = \"Please initialize sdk first by clicking initialize Button\";\r\n            modal.style.display = \"block\";\r\n        }\r\n        else {\r\n            var modal = document.getElementById(\"myModal\");\r\n            modal.style.display = \"none\";\r\n        }\r\n        var args = [];\r\n        if (config.inputs) {\r\n            for (var i = 0; i < config.inputs.length; i++) {\r\n                var inputValue = config.inputs[i].valueGetter();\r\n                if (inputValue === null) {\r\n                    return;\r\n                }\r\n                args.push(inputValue);\r\n            }\r\n        }\r\n        if (config.hasOutput) {\r\n            args.push(function (result) {\r\n                if (typeof result !== \"string\") {\r\n                    result = JSON.stringify(result);\r\n                }\r\n                textarea.value = result;\r\n            });\r\n        }\r\n        config.action.apply(null, args);\r\n    });\r\n}\r\nexport function restoreState() {\r\n    var stateStr = localStorage.getItem(\"state\");\r\n    if (!stateStr) {\r\n        return;\r\n    }\r\n    var state = JSON.parse(stateStr);\r\n    for (var id in state) {\r\n        inputs[id].value = state[id];\r\n    }\r\n}\r\nexport function saveState() {\r\n    var state = {};\r\n    for (var id in inputs) {\r\n        state[id] = inputs[id].value;\r\n    }\r\n    localStorage.setItem(\"state\", JSON.stringify(state));\r\n}\r\nexport function downloadHandler() {\r\n    var input = document.querySelector(\"#image_uploads\");\r\n    var preview = document.querySelector(\".fileUploadPreview\");\r\n    input.style.opacity = 0;\r\n    input.addEventListener(\"change\", updateImageDisplay);\r\n    function updateImageDisplay() {\r\n        while (preview.firstChild) {\r\n            preview.removeChild(preview.firstChild);\r\n        }\r\n        var curFiles = input.files;\r\n        if (curFiles.length === 0) {\r\n            var para = document.createElement(\"p\");\r\n            para.textContent = \"No files currently selected for upload\";\r\n            preview.appendChild(para);\r\n        }\r\n        else {\r\n            var list = document.createElement(\"ol\");\r\n            preview.appendChild(list);\r\n            for (var i = 0; i < curFiles.length; i++) {\r\n                var listItem = document.createElement(\"li\");\r\n                var para = document.createElement(\"p\");\r\n                if (validFileType(curFiles[i])) {\r\n                    para.textContent =\r\n                        \"File name \" +\r\n                            curFiles[i].name +\r\n                            \", file size \" +\r\n                            returnFileSize(curFiles[i].size) +\r\n                            \".\";\r\n                    var image = document.createElement(\"img\");\r\n                    image.src = window.URL.createObjectURL(curFiles[i]);\r\n                    listItem.appendChild(image);\r\n                    listItem.appendChild(para);\r\n                }\r\n                else {\r\n                    para.textContent =\r\n                        \"File name \" +\r\n                            curFiles[i].name +\r\n                            \": Not a valid file type. Update your selection.\";\r\n                    listItem.appendChild(para);\r\n                }\r\n                list.appendChild(listItem);\r\n            }\r\n        }\r\n    }\r\n    var fileTypes = [\"image/jpeg\", \"image/pjpeg\", \"image/png\"];\r\n    function validFileType(file) {\r\n        for (var i = 0; i < fileTypes.length; i++) {\r\n            if (file.type === fileTypes[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    function returnFileSize(number) {\r\n        if (number < 1024) {\r\n            return number + \"bytes\";\r\n        }\r\n        else if (number >= 1024 && number < 1048576) {\r\n            return (number / 1024).toFixed(1) + \"KB\";\r\n        }\r\n        else if (number >= 1048576) {\r\n            return (number / 1048576).toFixed(1) + \"MB\";\r\n        }\r\n    }\r\n}\r\n","import { addModule } from \"./utils\";\r\nimport * as microsoftTeams from '@microsoft/teams-js';\r\nexport const initializeAppModules = () => {\r\n    var childWindow;\r\n    let totalStates = 0;\r\n    let onTabReadyEvent = null;\r\n    addModule({\r\n        name: \"initialize\",\r\n        initializedRequired: false,\r\n        action: function () {\r\n            onTabReadyEvent = microsoftTeams.initialize();\r\n            setTimeout(function (event) {\r\n                onTabReadyEvent.notifySuccess();\r\n            }, 15000);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"AppInitializationSuccess\",\r\n        initializedRequired: true,\r\n        action: function (output) {\r\n            onTabReadyEvent.notifySuccess();\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"AppInitializationFailed\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"appInitializationFailedInput\"\r\n            }],\r\n        action: function (appInitializationFailedInput) {\r\n            onTabReadyEvent.notifyFailure(appInitializationFailedInput);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"getContext\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.getContext(output);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"navigateCrossDomain\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"url\"\r\n            }],\r\n        action: function (url) {\r\n            microsoftTeams.navigateCrossDomain(url);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"registerOnThemeChangeHandler\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.registerOnThemeChangeHandler(output);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"getContext\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.getContext(output);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"navigateCrossDomain\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"url\"\r\n            }],\r\n        action: function (url) {\r\n            microsoftTeams.navigateCrossDomain(url);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"registerOnThemeChangeHandler\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.registerOnThemeChangeHandler(output);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"registerChangeSettingsHandler\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.registerChangeSettingsHandler(function () {\r\n                output(\"Change Settings Event recieved\");\r\n            });\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"shareDeepLink\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"deepLinkParameters\"\r\n            }],\r\n        action: function (deepLinkParameters) {\r\n            microsoftTeams.shareDeepLink(deepLinkParameters);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"executeDeepLink\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"deepLink\"\r\n            }],\r\n        action: function (deepLink) {\r\n            microsoftTeams.executeDeepLink(deepLink);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"authentication.authenticate\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"url\"\r\n            }],\r\n        hasOutput: true,\r\n        action: function (url, output) {\r\n            microsoftTeams.authentication.authenticate({\r\n                url: url,\r\n                successCallback: function (result) {\r\n                    output(\"Success:\" + result);\r\n                },\r\n                failureCallback: function (reason) {\r\n                    output(\"Failure:\" + reason);\r\n                    MessageEvent;\r\n                },\r\n            });\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"tasks.startTask and listen for task module messages\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"taskInfo\"\r\n            }],\r\n        action: function (taskInfo, output) {\r\n            childWindow = microsoftTeams.tasks.startTask(taskInfo);\r\n            childWindow.addEventListener(\"message\", function (message) {\r\n                output(\"Message from task module: \" + message);\r\n                childWindow.postMessage(\"tab received - \" + message);\r\n            });\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"send message to Child Window(tab to task module)\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"message\"\r\n            }],\r\n        action: function (message, output) {\r\n            if (childWindow) {\r\n                childWindow.postMessage(message);\r\n            }\r\n            else {\r\n                output(\"child window not available\");\r\n            }\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"send message to parent Window(task module to tab)\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"message\"\r\n            }],\r\n        action: function (message, output) {\r\n            var parentWindow = microsoftTeams.ParentAppWindow.Instance;\r\n            if (parentWindow) {\r\n                parentWindow.postMessage(message);\r\n                output(\"message sent to parent(tab)\");\r\n            }\r\n            else {\r\n                output(\"parent window not available\");\r\n            }\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"register listener for parent message(tab to task module)\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            var parentWindow = microsoftTeams.ParentAppWindow.Instance;\r\n            if (parentWindow) {\r\n                parentWindow.addEventListener(\"message\", function (message) {\r\n                    output(\"message from tab: \" + message);\r\n                });\r\n            }\r\n            else {\r\n                output(\"parent window not available\");\r\n            }\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"downloadFile ShowNotificationOnly\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"showNotificationParameters\"\r\n            }],\r\n        action: function (showNotificationParameters) {\r\n            microsoftTeams.showNotification(showNotificationParameters);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"getAuthToken\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"getAuthTokenParameters\"\r\n            }],\r\n        action: function (getAuthTokenParameters, output) {\r\n            getAuthTokenParameters.successCallback = (token) => {\r\n                output(\"Success: \" + token);\r\n            };\r\n            getAuthTokenParameters.failureCallback = (reason) => {\r\n                output(\"Failure: \" + reason);\r\n            };\r\n            microsoftTeams.authentication.getAuthToken(getAuthTokenParameters);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"authentication.notifyFailure\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"reason\"\r\n            }],\r\n        action: function (reason) {\r\n            microsoftTeams.authentication.notifyFailure(reason);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"authentication.notifySuccess\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"result\"\r\n            }],\r\n        action: function (result) {\r\n            microsoftTeams.authentication.notifySuccess(result);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.getSettings\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.settings.getSettings(output);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.registerOnSaveHandler\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.settings.registerOnSaveHandler(function (saveEvent) {\r\n                window.saveEvent = saveEvent;\r\n                output(\"SaveEvent recieved\");\r\n            });\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.registerOnSaveHandler.notifyFailure\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"reason\"\r\n            }],\r\n        action: function (reason) {\r\n            window.saveEvent && window.saveEvent.notifyFailure(reason);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.registerOnSaveHandler.notifySuccess\",\r\n        initializedRequired: true,\r\n        action: function () {\r\n            window.saveEvent && window.saveEvent.notifySuccess();\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.setSettings\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"settings\"\r\n            }],\r\n        hasOutput: true,\r\n        action: function (settings, output) {\r\n            microsoftTeams.settings.setSettings(settings);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.setValidityState\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"boolean\",\r\n                name: \"validityState\"\r\n            }],\r\n        action: function (validityState) {\r\n            microsoftTeams.settings.setValidityState(validityState);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.registerOnRemoveHandler\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.settings.registerOnRemoveHandler(function (removeEvent) {\r\n                window.removeEvent = removeEvent;\r\n                output(\"RemoveEvent recieved\");\r\n            });\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.registerOnRemoveHandler.notifyFailure\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"reason\"\r\n            }],\r\n        action: function (reason) {\r\n            window.removeEvent && window.removeEvent.notifyFailure(reason);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"settings.registerOnRemoveHandler.notifySuccess\",\r\n        initializedRequired: true,\r\n        action: function () {\r\n            window.removeEvent && window.removeEvent.notifySuccess();\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"openFilePreview\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"filePreviewParameters\"\r\n            }],\r\n        action: function (filePreviewParameters) {\r\n            microsoftTeams.openFilePreview(filePreviewParameters);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"task.submitTask\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"string\",\r\n                name: \"result\"\r\n            },\r\n            {\r\n                type: \"string\",\r\n                name: \"appId\"\r\n            }],\r\n        action: function (result, appId) {\r\n            microsoftTeams.tasks.submitTask(result, appId);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"tasks.startTask\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"taskInfo\"\r\n            }],\r\n        action: function (taskInfo) {\r\n            microsoftTeams.tasks.startTask(taskInfo);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"downloadFile ShowNotificationOnly\",\r\n        initializedRequired: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"showNotificationParameters\"\r\n            }],\r\n        action: function (showNotificationParameters) {\r\n            microsoftTeams.showNotification(showNotificationParameters);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"getAuthToken\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        inputs: [{\r\n                type: \"object\",\r\n                name: \"getAuthTokenParameters\"\r\n            }],\r\n        action: function (getAuthTokenParameters, output) {\r\n            getAuthTokenParameters.successCallback = (token) => {\r\n                output(\"Success: \" + token);\r\n            };\r\n            getAuthTokenParameters.failureCallback = (reason) => {\r\n                output(\"Failure: \" + reason);\r\n            };\r\n            microsoftTeams.authentication.getAuthToken(getAuthTokenParameters);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"getChatMembers\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.getChatMembers(output);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"getUserJoinedTeams\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams;\r\n            microsoftTeams.getUserJoinedTeams(output);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"registerBeforeUnload\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            microsoftTeams.registerBeforeUnloadHandler(function (readyToUnload) {\r\n                window.readyToUnload = readyToUnload;\r\n                alert('beforeUnload recieved');\r\n                return true;\r\n            });\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"readyToUnload\",\r\n        initializedRequired: true,\r\n        action: function () {\r\n            window.readyToUnload && window.readyToUnload();\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"add states\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            totalStates++;\r\n            window.history.pushState({ some: 'state', id: totalStates }, \"tab state\" + totalStates, '/testTab');\r\n            output(\"total States: \" + totalStates);\r\n            window.addEventListener('popstate', function (event) {\r\n                if (event.state && event.state.id) {\r\n                    output(\"onpopstate: back button clicked. total remaining state: \" + event.state.id);\r\n                }\r\n            }, false);\r\n        }\r\n    });\r\n    addModule({\r\n        name: \"registerBackButtonHandler\",\r\n        initializedRequired: true,\r\n        hasOutput: true,\r\n        action: function (output) {\r\n            output(\"total States: \" + totalStates);\r\n            microsoftTeams.registerBackButtonHandler(function () {\r\n                if (totalStates > 0) {\r\n                    totalStates--;\r\n                    output(\"back button clicked. total remaining state: \" + totalStates);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n    });\r\n    // Get the modal\r\n    var modal = document.getElementById(\"myModal\");\r\n    // Get the <span> element that closes the modal\r\n    var span = document.getElementsByClassName(\"close\")[0];\r\n    // When the user clicks on <span> (x), close the modal\r\n    span.onclick = function () {\r\n        modal.style.display = \"none\";\r\n    };\r\n    // When the user clicks anywhere outside of the modal, close it\r\n    window.onclick = function (event) {\r\n        if (event.target == modal) {\r\n            modal.style.display = \"none\";\r\n        }\r\n    };\r\n};\r\n","import { container, restoreState, saveState, downloadHandler } from './utils';\r\nimport { initializeAppModules } from './app';\r\n(function () {\r\n    initializeAppModules();\r\n    document.body.appendChild(container);\r\n    // Give the DOM a chance to update from the appendChild above\r\n    setTimeout(restoreState, 0);\r\n    window.addEventListener(\"beforeunload\", saveState);\r\n    window.addEventListener(\"load\", downloadHandler);\r\n})();\r\n"],"sourceRoot":""}